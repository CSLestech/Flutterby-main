// Backup of guide_book_modal.dart 
// Created on: $(date)

import 'package:flutter/material.dart';
import 'guide_book_button.dart';

class GuideBookModal extends StatefulWidget {
  const GuideBookModal({super.key});

  @override
  State<GuideBookModal> createState() => _GuideBookModalState();
}

class _GuideBookModalState extends State<GuideBookModal> {
  final PageController _pageController = PageController();
  int _currentPage = 0;
  int _totalPages = 0;
  List<Map<String, dynamic>> _contentPages = [];

  @override
  void initState() {
    super.initState();
    _contentPages = GuideBookContent.getContentPages();
    _totalPages = _contentPages.isNotEmpty ? 
                 _contentPages[0]['visualParameters'].length + 
                 _contentPages[0]['lessons'].length : 0;
  }

  @override
  void dispose() {
    _pageController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    if (_contentPages.isEmpty) return const SizedBox.shrink();
    
    final currentContent = _contentPages[0];
    
    return Dialog(
      backgroundColor: Colors.transparent,
      insetPadding: const EdgeInsets.all(16),
      child: Container(
        width: MediaQuery.of(context).size.width * 0.9,
        height: MediaQuery.of(context).size.height * 0.7,
        decoration: BoxDecoration(
          color: const Color(0xFFF5F1E8), // Warm cream background
          borderRadius: BorderRadius.circular(20),
          border: Border.all(
            color: const Color(0xFF3E2C1C),
            width: 2,
          ),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withAlpha(77), // Fixed: using withAlpha instead of withOpacity
              spreadRadius: 2,
              blurRadius: 8,
              offset: const Offset(0, 4),
            ),
          ],
        ),
        child: Column(
          children: [
            // Header with close button
            Padding(
              padding: const EdgeInsets.fromLTRB(16, 16, 16, 0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  const SizedBox(width: 40), // Space for balance
                  Expanded(
                    child: Center(
                      child: Text(
                        currentContent['title'] ?? 'Guide Book',
                        style: const TextStyle(
                          fontFamily: 'Garamond',
                          fontSize: 18,
                          fontWeight: FontWeight.bold,
                          color: Color(0xFF3E2C1C),
                        ),
                        textAlign: TextAlign.center,
                      ),
                    ),
                  ),
                  IconButton(
                    icon: const Icon(
                      Icons.close,
                      color: Color(0xFF3E2C1C),
                    ),
                    onPressed: () => Navigator.of(context).pop(),
                  ),
                ],
              ),
            ),
            
            // Subtitle
            Padding(
              padding: const EdgeInsets.fromLTRB(24, 0, 24, 16),
              child: Text(
                currentContent['subtitle'] ?? '',
                style: const TextStyle(
                  fontFamily: 'Garamond',
                  fontSize: 14,
                  color: Color(0xFF3E2C1C),
                  fontStyle: FontStyle.italic,
                ),
                textAlign: TextAlign.center,
              ),
            ),
            
            // Rest of the implementation would be here...
          ],
        ),
      ),
    );
  }

  // Widget methods for building lesson and parameter pages would be here...
}